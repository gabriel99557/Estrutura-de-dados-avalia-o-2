import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Scanner;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;


public class Main {
  public static void main(String[] args) {
    Scanner teclado = new Scanner(System.in);
    String fone; 
      String nome;
      String apelido;
      String dataNascimento;
      int pontuacaoAcumulada;

    HashSet<Atleta> hashAtleta = new HashSet<Atleta>();
    System.out.println("Digite o numero de atletas que deseja cadastrar: ");
    int atletas = teclado.nextInt();
    teclado.nextLine();
    for (int i = 0; i < atletas; i++) {
      System.out.println("Fone: ");
        fone = teclado.nextLine();
        System.out.println("Nome: ");
      nome=teclado.nextLine();
      System.out.println("apelido: ");
      apelido = teclado.nextLine();
      System.out.println("data de nascimento: ");
      dataNascimento = teclado.nextLine();
      System.out.println("pontuacao acumulado: ");
      pontuacaoAcumulada= teclado.nextInt();
       teclado.nextLine();
      if (!hashAtleta.add(new Atleta( fone,  nome,  apelido,  dataNascimento, pontuacaoAcumulada))) {
        System.out.println("Atleta com esse telefone ja cadastrado!");
      }
    }


    ArrayList<Atleta> listaOrdenada = new ArrayList<>(hashAtleta);

    Collections.sort(listaOrdenada, new Comparator<Atleta>() {
        @Override
        public int compare(Atleta atleta1, Atleta atleta2) {
            return Integer.compare(atleta2.getPontuacaoAcumulada(), atleta1.getPontuacaoAcumulada());
        }
    });

    
    for (Atleta atleta : listaOrdenada) {
        System.out.println(atleta);
    }
    System.out.println("Deseja remover algum atleta? \n Digite 1 para sim e 2 para não:");
    int op = teclado.nextInt();
    teclado.nextLine();
    if(op == 2){
      try (BufferedWriter writer = new BufferedWriter(new FileWriter("atletas.csv"))) {
          writer.write("Fone,Nome,Apelido,Data de Nascimento,Pontuação Acumulada\n");
          for (Atleta atleta : listaOrdenada) {
              writer.write(atleta.getFone() + "," + atleta.getNome() + "," + atleta.getApelido() + ","
                      + atleta.getDataNascimento() + "," + atleta.getPontuacaoAcumulada() + "\n");
          }
          System.out.println("Dados salvos com sucesso em atletas.csv");
      } catch (IOException e) {
          System.err.println("Erro ao escrever arquivo CSV: " + e.getMessage());
      }

      return;
    }
    while(op != 2){
      System.out.println("Digite o número de telefone do atleta que deseja remover:");
      String telefoneRemover = teclado.nextLine();

      boolean removido = false;
      for (Atleta atleta : hashAtleta) {
          if (atleta.getFone().equals(telefoneRemover)) {
              hashAtleta.remove(atleta);
              removido = true;
              break;
          }
      }

      if (removido) {
          System.out.println("Atleta removido com sucesso.");
      } else {
          System.out.println("Atleta não encontrado.");
      }
      System.out.println("Deseja remover mais algum atleta? \nDigite 1 para sim e 2 para não:");
      op = teclado.nextInt();
      teclado.nextLine();
    }     

    ArrayList<Atleta> listaOrdenada2 = new ArrayList<>(hashAtleta);
    for (Atleta atleta : listaOrdenada2) {
        System.out.println(atleta);
    }

    try (BufferedWriter writer = new BufferedWriter(new FileWriter("atletas.csv"))) {
      writer.write("Fone,Nome,Apelido,Data de Nascimento,Pontuação Acumulada\n");
      for (Atleta atleta : listaOrdenada2) {
          writer.write(atleta.getFone() + "," + atleta.getNome() + "," + atleta.getApelido() + ","
                  + atleta.getDataNascimento() + "," + atleta.getPontuacaoAcumulada() + "\n");
      }
      System.out.println("Dados salvos com sucesso em atletas.csv");
    } catch (IOException e) {
      System.err.println("Erro ao escrever arquivo CSV: " + e.getMessage());
    }
    return;
  }
}
